// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using projectef;

#nullable disable

namespace ProjectEF.Migrations
{
    [DbContext(typeof(TasksContext))]
    partial class TasksContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("projectef.models.Category", b =>
                {
                    b.Property<Guid>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Impact")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("CategoryID");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryID = new Guid("dfd661e0-369b-4f7d-8382-27dd541eaf02"),
                            Description = " All pending activities description",
                            Impact = 2,
                            Name = "Pending Activities"
                        },
                        new
                        {
                            CategoryID = new Guid("dfd661e0-369b-4f7d-8382-27dd541eaf03"),
                            Description = " Meetings, birthdates and appointments",
                            Impact = 5,
                            Name = "Upcoming events"
                        });
                });

            modelBuilder.Entity("projectef.models.Task", b =>
                {
                    b.Property<Guid>("TaskID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskPriority")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("TaskID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Task", (string)null);

                    b.HasData(
                        new
                        {
                            TaskID = new Guid("dfd661e0-369b-4f7d-8382-27dd541eaf50"),
                            CategoryID = new Guid("dfd661e0-369b-4f7d-8382-27dd541eaf02"),
                            CreationDate = new DateTime(2024, 1, 2, 23, 2, 22, 205, DateTimeKind.Local).AddTicks(8910),
                            Description = " Call for a quote on the tenant insurance",
                            TaskPriority = 1,
                            Title = "Call the insurance company"
                        },
                        new
                        {
                            TaskID = new Guid("dfd661e0-369b-4f7d-8382-27dd541eaf51"),
                            CategoryID = new Guid("dfd661e0-369b-4f7d-8382-27dd541eaf03"),
                            CreationDate = new DateTime(2024, 1, 2, 23, 2, 22, 205, DateTimeKind.Local).AddTicks(8968),
                            Description = " Job interview at Boeing on Friday ",
                            TaskPriority = 2,
                            Title = "Job Interview"
                        });
                });

            modelBuilder.Entity("projectef.models.Task", b =>
                {
                    b.HasOne("projectef.models.Category", "Category")
                        .WithMany("tasks")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("projectef.models.Category", b =>
                {
                    b.Navigation("tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
